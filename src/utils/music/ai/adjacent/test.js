import { getAdjacentPlacements, getAdjacentCoordinates } from '.'
import { MOCK_BOARD } from '../../../../__mocks__/board'

describe('getAdjacentCoordinates', () => {
    it('returns array with centre coordinates for first domino', () => {
        expect(getAdjacentCoordinates([])).toStrictEqual([[0, 0]])
    })

    it('returns array of coordinates for board with single domino', () => {
        expect(getAdjacentCoordinates([MOCK_BOARD[0]])).toStrictEqual([
            [0, 1], [0, -1], [1, 1], [1, -1], [2, 0], [2, -1], [-1, 0], [-1, 1],
        ])
    })

    it('returns array of coordinates for board with many dominoes', () => {
        expect(getAdjacentCoordinates(MOCK_BOARD)).toStrictEqual([
            [0, 3], [0, -2], [1, 2], [1, -1], [1, -2], [2, 1], [2, -1], [3, 0], [3, -1], [-1, 2], [-1, 3], [-1, -1], [-2, 0], [-2, 4], [-3, 1], [-3, 2], [-3, 3], [-3, 4],
        ])
    })
})

describe('getAdjacentPlacements', () => {
    it('returns array of placements for first domino', () => {
        expect(getAdjacentPlacements([])).toStrictEqual([
            [[-1, 0], [0, 0]],
            [[0, 0], [1, 0]],
            [[0, 0], [0, 1]],
            [[0, 0], [-1, 1]],
            [[0, -1], [0, 0]],
            [[1, -1], [0, 0]],
        ])
    })

    it('returns array of placements for board with single domino', () => {
        expect(getAdjacentPlacements([MOCK_BOARD[0]])).toStrictEqual([
            [[-1, 1], [0, 1]], [[-1, 1], [-1, 2]], [[-1, 1], [-2, 2]], [[0, 1], [1, 1]], [[0, 1], [0, 2]], [[0, 1], [-1, 2]], [[-1, -1], [0, -1]], [[-1, -1], [-1, 0]], [[0, -1], [1, -1]], [[0, -1], [-1, 0]], [[0, -2], [0, -1]], [[1, -2], [0, -1]], [[1, -2], [1, -1]], [[1, 1], [2, 1]], [[1, 1], [1, 2]], [[1, 1], [0, 2]], [[2, 0], [1, 1]], [[2, 0], [3, 0]], [[2, 0], [2, 1]], [[1, -1], [2, -1]], [[2, -2], [1, -1]], [[2, -2], [2, -1]], [[2, -1], [2, 0]], [[2, -1], [3, -1]], [[3, -1], [2, 0]], [[3, -2], [2, -1]], [[-2, 0], [-1, 0]], [[-1, 0], [-1, 1]], [[-1, 0], [-2, 1]], [[-2, 1], [-1, 1]],
        ])
    })

    it('returns array of placements for board with many dominoes', () => {
        expect(getAdjacentPlacements(MOCK_BOARD)).toStrictEqual([
            [[-1, 3], [0, 3]], [[-1, 3], [-1, 4]], [[-1, 3], [-2, 4]], [[0, 3], [1, 3]], [[0, 3], [0, 4]], [[0, 3], [-1, 4]], [[1, 2], [0, 3]], [[1, 2], [2, 2]], [[1, 2], [1, 3]], [[-1, -2], [0, -2]], [[-1, -2], [-1, -1]], [[0, -2], [1, -2]], [[0, -2], [-1, -1]], [[0, -3], [0, -2]], [[1, -3], [0, -2]], [[1, -3], [1, -2]], [[2, 1], [1, 2]], [[2, 1], [3, 1]], [[2, 1], [2, 2]], [[1, -1], [2, -1]], [[1, -2], [1, -1]], [[1, -2], [2, -2]], [[2, -2], [1, -1]], [[2, -2], [2, -1]], [[2, -3], [1, -2]], [[3, 0], [2, 1]], [[3, 0], [4, 0]], [[3, 0], [3, 1]], [[2, -1], [3, -1]], [[3, -2], [2, -1]], [[3, -2], [3, -1]], [[3, -1], [3, 0]], [[3, -1], [4, -1]], [[4, -1], [3, 0]], [[4, -2], [3, -1]], [[-1, 2], [-1, 3]], [[-2, -1], [-1, -1]], [[-2, -1], [-2, 0]], [[-1, -1], [-2, 0]], [[-3, 0], [-2, 0]], [[-3, 0], [-3, 1]], [[-2, 0], [-3, 1]], [[-3, 4], [-2, 4]], [[-3, 4], [-3, 5]], [[-3, 4], [-4, 5]], [[-2, 4], [-1, 4]], [[-2, 4], [-2, 5]], [[-2, 4], [-3, 5]], [[-4, 1], [-3, 1]], [[-3, 1], [-3, 2]], [[-3, 1], [-4, 2]], [[-4, 2], [-3, 2]], [[-3, 2], [-3, 3]], [[-3, 2], [-4, 3]], [[-4, 3], [-3, 3]], [[-3, 3], [-3, 4]], [[-3, 3], [-4, 4]], [[-4, 4], [-3, 4]],
        ])
    })
})
