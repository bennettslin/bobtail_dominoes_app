@import '../../../scss/constants/borders';
@import '../../../scss/constants/colours';
@import '../../../scss/constants/responsive';
@import '../../../scss/mixins/reflection';

$length__base: $margin__xs;
$length__frame: $length__base * 0.75;
$length__inset__top: $length__base * 0.33;
$length__inset__side: $length__base * 0.125;

$borderRadius__outer: $borderRadius__lg;
$borderRadius__inner: $borderRadius__lg - $length__base * 0.66;

.StyledFrame {
    position: relative;
    width: 100%;
}

@media
(min-width: $breakpoint__xs) and (orientation: portrait),
(min-height: $breakpoint__xs) and (orientation: landscape) {
    .StyledFrame {
        padding:
            $length__frame + $length__inset__top
            $length__frame + $length__inset__side
            $length__frame + $length__base;
        border-radius: $borderRadius__outer;
        background-color: $colour__frame__dark;

        &:before {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: calc(100% - #{$length__base});
            border-radius: $borderRadius__outer;
            @include mixin__reflection(
                $colour__frame__medium,
                $colour__frame__light,
            );
            content: '';
        }
    }

    .StyledFrame__inset {
        position: absolute;
        top: 0;
        left: 0;
        width: calc(100% - #{$length__frame * 2});
        height: calc(100% - #{$length__base + $length__frame * 2});
        margin: $length__frame;
        border-radius: $borderRadius__inner;
        background-color: $colour__frame__dark;
    }
}