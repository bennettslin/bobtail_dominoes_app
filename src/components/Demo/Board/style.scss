@import '../../../scss/constants/demo';
@import '../../../scss/constants/menu';
@import '../../../scss/constants/page';
@import '../../../scss/constants/responsive';
@import '../../../scss/constants/transition';

.Board {
    @media (orientation: portrait) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: calc(100% - #{$portraitHeight__info__xxs});
        max-height: $portraitLength__board__xxs;

        @media (min-width: $breakpoint__xs) {
            height: calc(100% - #{$portraitHeight__info__xs});
            max-height: $portraitLength__board__xs;
        }
        @media (min-width: $breakpoint__sm) {
            height: calc(100% - #{$portraitHeight__info__sm});
            max-height: $portraitLength__board__sm;
        }
        @media (min-width: $breakpoint__md) {
            max-height: $portraitLength__board__md;
        }
    }

    @media (orientation: landscape) {
        flex-grow: 1;
        max-width: calc(100% - #{$width__logs__xxs});
        height: 100%;

        @media (min-height: $breakpoint__xs) {
            max-width: calc(100% - #{$width__logs__xs});
        }

        @media (min-height: $breakpoint__sm) {
            max-width: calc(100% - #{$width__logs__sm});
        }

        @media (min-width: $breakpoint__md) {
            max-width: none;
        }
    }
}

.Board__square {
    aspect-ratio: 1 / 1;

    /**
     * This is needed because aspect ratio only prevents exceeding
     * height, not width.
     */
    @media (orientation: portrait) {
        /**
         * This partly fixes an issue where iOS Safari only started supporting
         * aspect ratio in the latest build.
         */
        height: 100%;

        // Screen height - page padding - menu height - info height.
        max-width: calc(
            100vh - #{
                $padding__page__xxs * 2 +
                $height__menu__xxs +
                $portraitHeight__info__xxs
            }
        );

        @media (min-width: $breakpoint__xs) {
            max-width: calc(
                100vh - #{
                    $padding__page__xs * 2 +
                    $height__menu__xs +
                    $portraitHeight__info__xs
                }
            );
        }
        @media (min-width: $breakpoint__sm) {
            max-width: calc(
                100vh - #{
                    $padding__page__sm * 2 +
                    $height__menu__sm +
                    $portraitHeight__info__sm
                }
            );
        }
        @media (min-width: $breakpoint__md) {
            max-width: calc(
                100vh - #{
                    $padding__page__md * 2 +
                    $height__menu__md +
                    $portraitHeight__info__sm
                }
            );
        }
    }

    @media (orientation: landscape) {
        // Screen height - page padding - menu height - info height.
        max-width: calc(
            100vh - #{
                $padding__page__xxs * 2 +
                $height__menu__xxs
            }
        );

        @media (min-height: $breakpoint__xs) {
            max-width: calc(
                100vh - #{
                    $padding__page__xs * 2 +
                    $height__menu__xs
                }
            );
        }
        @media (min-height: $breakpoint__sm) {
            max-width: calc(
                100vh - #{
                    $padding__page__sm * 2 +
                    $height__menu__sm
                }
            );
        }
        @media (min-height: $breakpoint__md) {
            max-width: calc(
                100vh - #{
                    $padding__page__md * 2 +
                    $height__menu__md
                }
            );
        }
    }
}

.Board__movable {
    position: absolute;
    width: 100%;
    height: 100%;
    transform: translate(-50%, -50%);
    transition:
        top $transitionDuration__slowest,
        left $transitionDuration__slowest;
}